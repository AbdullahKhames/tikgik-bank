server:
  port: 9010
logging:
  level:
    web: DEBUG
    live.tikgik.bank.message: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
spring:
  application:
    name: "message"
  cloud:
    function:
      definition: email|sms
    stream:
      default-binder: kafka
      bindings:
        emailsms-in-0:
          destination: send-communication
          group: ${spring.application.name}
        emailsms-out-0:
          destination: communication-sent
      kafka:
        binder:
          brokers:
            - ${KAFKA_BROKER}
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8070/eureka/}

info:
  app:
    name: "messages"
    description: "Eazy Bank messages Application"
    version: "1.0.0"
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      exponentialBackoffMultiplier: 2
      enableExponentialBackoff: true
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1
    # command to run rabbit mq docker run -it --r