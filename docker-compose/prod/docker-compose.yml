version: '3.8'

services:
  # rabbit:
  #   image: rabbitmq:4.0-management
  #   hostname: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   healthcheck:
  #     test: rabbitmq-diagnostics check_port_connectivity
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10
  #     start_period: 5s
  #   extends:
  #     file: common-config.yml
  #     service: network-deploy-service
  redis:
    image: redis
    container_name: redis-Db
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      timeout: 10s
      retries: 10
    extends:
      file: common-config.yml
      service: network-deploy-service
    volumes:
      - redisdb-data:/data
    command: ["redis-server", "--appendonly", "yes"]
  accountsDb:
    image: postgres
    container_name: accounts-Db
    ports:
      - "5432:5432"
    volumes:
      - accountdb-data:/var/lib/postgresql/data
      - D:\dev\projects\tikgik-bank\account\init.sql:/docker-entrypoint-initdb.d/init.sql
    extends:
      file: common-config.yml
      service: microservice-db-config

  banksDb:
    image: postgres
    container_name: banks-Db
    ports:
      - "5433:5432"
    volumes:
      - bankdb-data:/var/lib/postgresql/data
      - D:\dev\projects\tikgik-bank\bank\init.sql:/docker-entrypoint-initdb.d/init.sql
    extends:
      file: common-config.yml
      service: microservice-db-config

  cardsDb:
    image: postgres
    container_name: cards-Db
    ports:
      - "5434:5432"
    volumes:
      - carddb-data:/var/lib/postgresql/data
      - D:\dev\projects\tikgik-bank\card\init.sql:/docker-entrypoint-initdb.d/init.sql
    extends:
      file: common-config.yml
      service: microservice-db-config
  configserver:
    # build:
    #   context: ../../configserver
    #   dockerfile: Dockerfile
    image: khames96/configserver:s10
    container_name: configserver-ms
    ports:
      - "8071:8071"
    # depends_on:
    #   rabbit:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8071/actuator/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config
  eurekaserver:
    # build:
    #   context: ../../eurekaserver
    #   dockerfile: Dockerfile
    image: khames96/eurekaserver:s10
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8070/actuator/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config
    depends_on:
      configserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: eurekaserver
      CONFIG_SERVER_URL: configserver:http://configserver:8071/
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/

  gatewayserver:
    # build:
    #   context: ../../gatewayserver
    #   dockerfile: Dockerfile
    image: khames96/gatetwayserver:s10
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    extends:
      file: common-config.yml
      service: microservice-base-config
    depends_on:
      accounts:
        condition: service_healthy
      banks:
        condition: service_healthy
      cards:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: gatewayserver
      EUREKA_SERVER_URL: http://eurekaserver:8070/eureka/
      CONFIG_SERVER_URL: configserver:http://configserver:8071/
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8071/
      SPRING_DATA_REDIS_CONNECT-TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s

  accounts:
    # build:
    #   context: ../../account
    #   dockerfile: Dockerfile
    image: khames96/account:s10
    container_name: accounts-ms
    ports:
      - "8081:8081"
    depends_on:
      accountsDb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8081/api/actuator/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "account"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://accountsDb:5432/tikgik_bank_account"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  banks:
    # build:
    #   context: ../../bank
    #   dockerfile: Dockerfile
    image: khames96/bank:s10
    container_name: banks-ms
    ports:
      - "8083:8083"
    depends_on:
      banksDb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8083/api/actuator/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "bank"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://banksDb:5432/tikgik_bank_bank"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  cards:
    # build:
    #   context: ../../card
    #   dockerfile: Dockerfile
    image: khames96/card:s10
    container_name: cards-ms
    ports:
      - "8082:8082"
    depends_on:
      cardsDb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8082/api/actuator/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "card"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://cardsDb:5432/tikgik_bank_card"
    extends:
      file: common-config.yml
      service: microservice-configserver-config

#  banks1:
#    # build:
#    #   context: ../../bank
#    #   dockerfile: Dockerfile
#    image: khames96/bank:s10
#    container_name: banks-ms1
#    ports:
#      - "8084:8083"
#    depends_on:
#      banksDb:
#        condition: service_healthy
#    environment:
#      SPRING_APPLICATION_NAME: "bank"
#      SPRING_DATASOURCE_URL: "jdbc:postgresql://banksDb:5432/tikgik_bank_bank"
#    extends:
#      file: common-config.yml
#      service: microservice-configserver-config
#
#  cards1:
#    # build:
#    #   context: ../../card
#    #   dockerfile: Dockerfile
#    image: khames96/card:s10
#    container_name: cards-ms1
#    ports:
#      - "8085:8082"
#    depends_on:
#      cardsDb:
#        condition: service_healthy
#    environment:
#      SPRING_APPLICATION_NAME: "card"
#      SPRING_DATASOURCE_URL: "jdbc:postgresql://cardsDb:5432/tikgik_bank_card"
#    extends:
#      file: common-config.yml
#      service: microservice-configserver-config


networks:
  tikgikBank:
    driver: "bridge"

volumes:
  accountdb-data:
  bankdb-data:
  carddb-data:
  redisdb-data:
