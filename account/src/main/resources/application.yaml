server:
    port: 8081
    servlet:
        context-path: /api
logging:
  level:
    web: debug

spring:
  application:
    name: account
  datasource:
#    url: ${DB_URL:jdbc:postgresql://localhost:5432/tikgik_bank_account}
    url: ${DB_URL_ACCOUNT:jdbc:postgresql://localhost:5432/tikgik_bank_account}
    username: ${DB_USERNAME:dev}
    password: ${DB_PASSWORD:123}
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
  jpa:
      hibernate:
        ddl-auto: ${DB_DDL-AUTO:update}
      show-sql: ${DB_SHOW_SQL:true}
      properties:
          hibernate:
              dialect: ${DB_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
      open-in-view: false

  profiles:
    active: ${ACTIVE_PROFILE:prod}
  config:
    import: ${CONFIG_SERVER_URL:optional:configserver:http://localhost:8071/}
  rabbitmq:
    host: "localhost"
    port: 5672
    username: guest
    password: guest
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
  info:
    env:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8070/eureka/}

info:
  app:
    name: "accounts"
    description: "Eazy Bank Accounts Application"
    version: "1.0.0"
    # command to run rabbit mq docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:4.0-management
  #commented because we will be using the spring cloud config server instead of the spring boot configurations.
#  config:
#    import:
#      - "application_qa.yml"
#      - "application_prod.yml"
#  profiles:
#    active: prod
#
#
#
#build:
#  version: "3.0"
#
#accounts:
#  message: "Welcome to EazyBank accounts related local APIs "
#  contactDetails:
#    name: "John Doe - Developer"
#    email: "john@eazybank.com"
#  onCallSupport:
#    - (555) 555-1234
#    - (555) 523-1345